---
title: "Planejamento e Análise de ensaios Agronômicos"
subtitle: "Capaciação Interna - NEPEM"
author: "Prof. Dr. Tiago Olivoto"
date: today
format: 
  html:
    theme: cosmo        # pode trocar: cosmo, journal, flatly, united, etc
    toc: true           # ativa sumário
    toc-depth: 3
    toc-location: left
    number-sections: true
    code-fold: true     # código dobrável
    code-tools: true    # botão de copiar código
    df-print: paged
    page-layout: article
    fontsize: 14pt
    linestretch: 1.5
    smooth-scroll: true
    title-block-banner: "#006699"  # cor do banner do título
    title-block-style: default
    title-block-banner-color: white
    mainfont: "Arial"
    monofont: "Fira Code"
---

# Pacotes


```{r warning=FALSE, message=FALSE}
library(tidyverse)
library(FielDHub)
library(qrlabelr)
library(uuid)
library(cli)
library(rio)
library(AgroR)
library(patchwork)

```

# Funções auxiliares
```{r}
source("funcoes_planejamento.R")
```



# Unifatorial
## Caderno de campo
```{r}
trats <- c("OLIVIA", "SOREX", "NEPEM", "HERMES", "T1", "T2")

croqui_uni <- 
  unifatorial(trats = trats,
              reps = 3,
              design = "RCBD",
              layout = "custom",
              layout_allocation = c(2, 3),
              exp_name = "Grande teste")
croqui_uni$fieldbook
export(croqui_uni$fieldbook, "caderno_campo_uni.csv")

```

## Croqui
```{r}
croqui_uni$fieldmap

ggsave("croqui_exp.pdf",
       width = 7,
       height = 4)
```


## Etiquetas


```{r}
qrlabelr::gp_label(dat = as.data.frame(croqui_uni$fieldbook),
                   # Top left 1
                   top_left_txt1 = 'Gen:',
                   top_left_id1 = 'TREATMENT',
                   # Top left 2
                   top_left_txt2 = 'Linha:',
                   top_left_id2 = 'ROW',
                   # Top right 1
                   # top_right_txt1 = 'Rep:',
                   # top_right_id1 = 'REP',
                   # Top right 2
                   top_right_txt2 = 'Col:',
                   top_right_id2 = 'COL',
                   # Bottom left 1
                   bottom_left_txt1 = "UUID:",
                   bottom_left_id1 = "UNIQUE_ID",
                   # Bottom left 2
                   bottom_left_txt2 = "Ensaio:",
                   bottom_left_id2 = "LOCATION",
                   # Center 1
                   center_right_txt1 = "Bloco:",
                   center_right_id1 = "REP",
                   # Center 2
                   # center_right_txt2 = "Protocolo:",
                   # center_right_id2 = "LOCATION",
                   # Center 3
                   # center_right_txt3 = "Col",
                   # center_right_id3 = "COLUMN",
                   filename = "test.pdf",
                   # Page size
                   page_wdt = 8.27,
                   page_hgt = 11.72,
                   top_mar = 0,
                   bot_mar = 0,
                   left_mar = 0.25,
                   right_mar = 0.25,
                   # Layout
                   numrow = 9,
                   numcol = 3,
                   font_sz = 10,
                   rname = "Olivoto",
                   get_unique_id = "custom",
                   unique_id =  "UNIQUE_ID",
                   family = "sans")
```


## Caderno a nível de planta
```{r}
croqui_planta <- 
  croqui_uni$fieldbook |>
  mutate(PLANTA = paste0("P", 1:5, collapse = ",")) |> 
  separate_longer_delim(cols = PLANTA, delim = ",") |> 
  mutate(UNIQUE_ID = UUIDgenerate(n = 90))

export(croqui_planta, "caderno_planta.csv")
```



# Fatorial


## Caderno de campo

## Etiquetas





# Análise de dados
## Unifatorial qualitativo
```{r}
df <- 
  import("dados.xlsx", sheet = "quali") |> 
  mutate(MP_med = MP / NPLA,
         MC_med = MC / NPLA,
         NC_med = NC / NPLA)

# importar todas as abas
dflist <- import_list("dados.xlsx")

# trocar <- function(x){
#   str_replace(x, ",", ".") |> as.numeric()
# }
# df2 <- import("https://docs.google.com/spreadsheets/d/1NDEsPFm2Wqe11fdGGsBXtxdFyqKbXMO8/edit?gid=247240163#gid=247240163") |> 
#   mutate(across(AP:MMG, trocar))

```


### Inspeção

```{r}
ggplot(df, aes(TREATMENT, NC_med)) +
  geom_boxplot()
```


### ANOVA
```{r}
an_nc <- with(df, DBC(TREATMENT, BLOCO, NC_med,
                      xlab = "Genótipos",
                      ylab = "Número de Cápsulas por planta"))

an_mp <- with(df, DBC(TREATMENT, BLOCO, MP_med,
                      xlab = "Genótipos",
                      ylab = "Biomassa (gramas por planta)"))


an_nc$plot + an_mp$plot +
  plot_annotation(tag_levels = "a")

ggsave("resultado_quali.jpg",
       width = 10,
       height = 4)
```

## Unifatorial quantitativo

```{r}
dflin <- import("dados.xlsx", sheet = "linear")

ggplot(dflin, aes(DOSEN, DGCI)) +
  geom_point() +
  stat_poly_line() +
  stat_poly_eq(use_label(c("eq", "R2")))


mod <- lm(DGCI ~ DOSEN, data = dflin)
summary(mod)

```

## quadrática
```{r}
dfquad <- import("dados.xlsx", sheet = "quadratica")

ggplot(dfquad, aes(dosen, rg)) +
  geom_point() +
  geom_smooth(method = "lm",
              formula = y ~ poly(x, degree = 2))


anova_quad <- 
  with(dfquad, DBC(dosen, bloco, rg,
                   quali = FALSE,
                   grau = 2))



```

### Máxima eficiência técnica e econômica
```{r}
b0 <- 2891.817129
b1 <- 30.311613
b2 <- -0.177405

# y = b0 + b1*x + b2 * x^2

D(expression(b0 + b1*x + b2 * x^2), "x")

fd <- function(x, b1, b2){
  b1 + b2 * (2 * x)
} 
met <- -b1 / (2 * b2)

# mapear a derivada de 0 a 120
plot(0:120, fd(0:120, b1, b2))


## máxima eficiência econômica
pureia <- 7.5
paveia <- 1.2

# máxima eficiência economica
mee <- met + pureia / (2 * b2 * paveia)

fd(67.81549, b1, b2)


anova_quad$plot +
  geom_vline(xintercept = met, color = "red") +
  geom_vline(xintercept = mee, color = "blue")

```


# Fatorial
```{r}
dftrigo <- import("dados.xlsx", sheet = "quali_quali")

with(dftrigo, FAT2DBC(ENX, NIT, REP, L))
```

